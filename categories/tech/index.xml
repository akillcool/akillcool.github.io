<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on Koi</title>
    <link>https://akillcool.github.io/categories/tech/</link>
    <description>Recent content in tech on Koi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Koi</copyright>
    <lastBuildDate>Sat, 07 Dec 2019 15:17:06 +0800</lastBuildDate>
    
	<atom:link href="https://akillcool.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>修改NTFS类型的优盘名称</title>
      <link>https://akillcool.github.io/post/rename-ntfs-usb-drive/</link>
      <pubDate>Sat, 07 Dec 2019 15:17:06 +0800</pubDate>
      
      <guid>https://akillcool.github.io/post/rename-ntfs-usb-drive/</guid>
      <description>&lt;p&gt;用&lt;code&gt;dd&lt;/code&gt;做了一个Archlinux的启动盘，发现官方镜像很贴心的给分了两个分区，一个放镜像数据，一个负责EFI启动：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;设备       启动    起点     末尾     扇区  大小 Id 类型
/dev/sdb1  *          0  1284095  1284096  627M  0 空
/dev/sdb2           164   131235   131072   64M ef EFI (FAT-12/16/32)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;于是自己把剩下的空间通过&lt;code&gt;fdisk&lt;/code&gt;新建了一个分区，然后格式化为了NTFS（平时优盘也会插到Windows机器上，担心其它格式不好识别，不使用FAT32，因为有4G的文件大小限制）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkfs.ntfs -f /dev/sdb3
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Hexo =&gt; Hugo</title>
      <link>https://akillcool.github.io/post/migrate-from-hexo-to-hugo/</link>
      <pubDate>Thu, 05 Dec 2019 22:53:30 +0800</pubDate>
      
      <guid>https://akillcool.github.io/post/migrate-from-hexo-to-hugo/</guid>
      <description>&lt;p&gt;Hexo用久了，感觉静态页面生成时间太久，同时又懒得对整个项目做备份，导致常常有想写博客的想法的时候，都会因为觉得麻烦而打消。
于是，今天尝试迁移到了Hugo，体验意外的不错。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ArchLinux开启Hibernate休眠</title>
      <link>https://akillcool.github.io/post/archlinux-hibernate-sleep/</link>
      <pubDate>Wed, 04 Dec 2019 19:25:03 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/archlinux-hibernate-sleep/</guid>
      <description>通过swap分区进行休眠，首先通过blkid命令找到swap分区对应的uuid 然后通过grub修改内核启动参数 vim /etc/default/grub 修改GRUB_CMDLIN</description>
    </item>
    
    <item>
      <title>双网卡双ISP基于源地址的路由配置</title>
      <link>https://akillcool.github.io/post/routing-double-network/</link>
      <pubDate>Wed, 31 Oct 2018 10:48:14 +0800</pubDate>
      
      <guid>https://akillcool.github.io/post/routing-double-network/</guid>
      <description>&lt;p&gt;实验室集群新拉了电信宽带，还有公网IP，带宽虽然很小，平常不用来传文件的话，只是ssh倒是足够了。&lt;/p&gt;
&lt;p&gt;但是集群内肯定是不能直接用电信宽带了，还是应该默认用教育网来访问网络。&lt;/p&gt;
&lt;p&gt;于是就有了下面对双网卡和路由的配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaBean和JSP</title>
      <link>https://akillcool.github.io/post/javabean-and-jsp/</link>
      <pubDate>Fri, 13 Oct 2017 21:55:27 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/javabean-and-jsp/</guid>
      <description>使用JavaBean规范，编写Guestbook类和MySQLUtil类，在MessageArchiever.jsp中使用getter和se</description>
    </item>
    
    <item>
      <title>把Servlet.java升级成JSP</title>
      <link>https://akillcool.github.io/post/servlet-to-jsp/</link>
      <pubDate>Fri, 13 Oct 2017 09:28:48 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/servlet-to-jsp/</guid>
      <description>修改时记得删掉Tomcat server里面web.xml的相关配置，context.xml不要修改。 新建header.jsp，footer.</description>
    </item>
    
    <item>
      <title>使用Commons DbUtils进行JDBC数据库连接</title>
      <link>https://akillcool.github.io/post/using_commons_dbutils/</link>
      <pubDate>Wed, 11 Oct 2017 16:15:47 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/using_commons_dbutils/</guid>
      <description>首先直接把jar包放在/WebContent/WEB-INF/lib目录下。 通过buildpath添加可能会有异常。 MessageArchiever.java {% codeblock lang:java %} import java.io.IOException; import java.sql.Connection; import java.sql.PreparedStatement; import</description>
    </item>
    
    <item>
      <title>通过Tomcat的DBCP连接MySQL</title>
      <link>https://akillcool.github.io/post/using_dbcp_setup/</link>
      <pubDate>Wed, 11 Oct 2017 11:27:44 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/using_dbcp_setup/</guid>
      <description>修改Servers目录下Tomcat的web.xml和context.xml两个配置文件 web.xml 增加如下代码： {% codeblock lang:xml %} DB Connectionjdbc/mysqljavax.sql.DataSourceContainer{% endcodeblock %} context.xml 增加如下代码： {% codeblock</description>
    </item>
    
    <item>
      <title>通过JDBC连接MySQL</title>
      <link>https://akillcool.github.io/post/jdbc-database-sample/</link>
      <pubDate>Mon, 02 Oct 2017 23:31:27 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/jdbc-database-sample/</guid>
      <description>Talk is cheap, just show the code. {% codeblock lang:java %} import java.sql.*; public class MySQLTest { public static void main(String[] args) throws Exception { // 驱动程序名 String driver = &amp;quot;com.mysql.jdbc.Driver&amp;quot;; // URL指向要访问的数据库名abc，useSSL=false使控制台不</description>
    </item>
    
    <item>
      <title>一个jQuery-validation实例</title>
      <link>https://akillcool.github.io/post/servlet-and-jquery-validate/</link>
      <pubDate>Mon, 02 Oct 2017 22:35:34 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/servlet-and-jquery-validate/</guid>
      <description>主要内容就是写了一个很简陋的HTML页面，上面有一个表单，然后提交给Servlet，Servlet返回表单输入的内容（用户名和密码）。 稍微有</description>
    </item>
    
    <item>
      <title>C#读取Xml文件</title>
      <link>https://akillcool.github.io/post/xml_file_reading_in_csharp/</link>
      <pubDate>Sat, 18 Feb 2017 14:09:01 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/xml_file_reading_in_csharp/</guid>
      <description>&lt;p&gt;描述：读取xml文件中的信息，将其输出。&lt;/p&gt;
&lt;p&gt;主要使用了XmlDocument 类，具体可在&lt;a href=&#34;https://msdn.microsoft.com/zh-cn/library/system.xml.xmldocument.aspx&#34;&gt;MSDN&lt;/a&gt;上查阅。&lt;/p&gt;
&lt;p&gt;注意在读取文件时用Load()方法而不是LoadXml()，否则可能会出现类似于错误如下：&lt;/p&gt;
&lt;p&gt;“读取XML 错误：根级别上的数据无效。 第 1 行，位置 1”&lt;/p&gt;
&lt;p&gt;要读取的xml文件：test.xml&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个删除字符的错误</title>
      <link>https://akillcool.github.io/post/delete-ch/</link>
      <pubDate>Thu, 18 Aug 2016 13:52:50 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/delete-ch/</guid>
      <description>Description 删除一个字符数组中指定的字符，对删除的字符个数计数，然后按照计数移动数组中的元素 Algorithm {% codeblock lang:c %} #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #define MAXSIZE 100 typedef struct { char ch[MAXSIZE + 1]; int length; } Str; void delete_ch(Str &amp;amp;str, char ch) {</description>
    </item>
    
    <item>
      <title>递归实现n个不同字符的全排列</title>
      <link>https://akillcool.github.io/post/recursion-full-array/</link>
      <pubDate>Mon, 15 Aug 2016 02:08:26 +0000</pubDate>
      
      <guid>https://akillcool.github.io/post/recursion-full-array/</guid>
      <description>Description 设str是含有n个不同字符的数组，perm(str,k-1,n)为str[0]`~str[k-1]的所有字符的全排列。很明显，perm(s</description>
    </item>
    
  </channel>
</rss>